<?xml version="1.0"?>
<!--@(#)SCADE2(W:SKDN08221CO2:RoutingHostWebsite:Web.config:0:21/May/2008[RoutingHostWebsite:1.0:21/May/2008])-->
<configuration>
  <configSections>
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
    <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
    <section name="cachingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings, Microsoft.Practices.EnterpriseLibrary.Caching, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  </configSections>
  <loggingConfiguration name="Logging Application Block" tracingEnabled="true" defaultCategory="" logWarningsWhenNoCategoriesMatch="true">
    <listeners>
      <add source="DyP" formatter="Text Formatter" log="Application" machineName="" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" traceOutputOptions="None" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="DyP EventLog TraceListener" />
    </listeners>
    <formatters>
      <add template="Timestamp: {timestamp}&#xA;Message: {message}&#xA;Category: {category}&#xA;Priority: {priority}&#xA;EventId: {eventid}&#xA;Severity: {severity}&#xA;Title:{title}&#xA;Machine: {machine}&#xA;Application Domain: {appDomain}&#xA;Process Id: {processId}&#xA;Process Name: {processName}&#xA;Win32 Thread Id: {win32ThreadId}&#xA;Thread Name: {threadName}&#xA;Extended Properties: {dictionary({key} - {value}&#xA;)}" type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="Text Formatter" />
    </formatters>
    <categorySources>
      <add switchValue="All" name="DyP BusinessObjects Errors Category">
        <listeners>
          <add name="DyP EventLog TraceListener" />
        </listeners>
      </add>
      <add switchValue="All" name="DyP Routing Errors Category">
        <listeners>
          <add name="DyP EventLog TraceListener" />
        </listeners>
      </add>
      <add switchValue="All" name="DyP Routing Events Category">
        <listeners>
          <add name="DyP EventLog TraceListener" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events" />
      <notProcessed switchValue="All" name="Unprocessed Category">
        <listeners>
          <add name="DyP EventLog TraceListener" />
        </listeners>
      </notProcessed>
      <errors switchValue="All" name="Logging Errors &amp; Warnings" />
    </specialSources>
  </loggingConfiguration>
  <exceptionHandling>
    <exceptionPolicies>
      <add name="DyP BusinessObjects Policy">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="NotifyRethrow" name="Exception">
            <exceptionHandlers>
              <add logCategory="DyP BusinessObjects Errors Category" eventId="100003" severity="Error" title="Enterprise Library Exception Handling" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" priority="0" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="BusinessObjects Logging Handler" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
      <add name="DyP Errors Policy">
        <exceptionTypes>
          <add type="System.ServiceModel.EndpointNotFoundException, System.ServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="NotifyRethrow" name="EndpointNotFoundException">
            <exceptionHandlers>
              <add logCategory="DyP Routing Errors Category" eventId="100002" severity="Error" title="Routing Endpoint not found" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" priority="0" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="LoggingHandlerEndpointNotFound" />
            </exceptionHandlers>
          </add>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="None" name="Exception">
            <exceptionHandlers>
              <add logCategory="DyP Routing Errors Category" eventId="100001" severity="Error" title="Routing unclassified exception" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" priority="0" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="LoggingHandler" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>
  <dataConfiguration defaultDatabase="SCADEDB" />
  <connectionStrings>
    <add name="SCADEDB" connectionString="Server=SCADENET; Database=SCADENET; Integrated Security=true;" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <cachingConfiguration defaultCacheManager="DyP.Cache">
    <cacheManagers>
      <add expirationPollFrequencyInSeconds="600" maximumElementsInCacheBeforeScavenging="1000" numberToRemoveWhenScavenging="10" backingStoreName="Null Storage" name="DyP.Cache" />
    </cacheManagers>
    <backingStores>
      <add encryptionProviderName="" type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.NullBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching, Version=3.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" name="Null Storage" />
    </backingStores>
  </cachingConfiguration>
  <appSettings>
    <add key="DefaultExceptionPolicy" value="DyP Errors Policy" />
    <add key="BusinessObjectsExceptionPolicy" value="DyP BusinessObjects Policy" />
    <add key="DefaultDBName" value="SCADEDB" />
    <add key="DefaultCacheManager" value="DyP.Cache" />
  </appSettings>
  <system.web>
    <compilation debug="false" />
    <authentication mode="Windows" />
  </system.web>
  <system.serviceModel>
    <services>
      <service name="SAT.DyP.Routing.Services.SoapRouter" behaviorConfiguration="metadataBehavior">
        <endpoint contract="SAT.DyP.Routing.Services.IRequestReplyDatagramRouter" binding="routerBinding" bindingConfiguration="SOAPRouterBindingConfiguration" behaviorConfiguration="SchemaValidationBehavior" />
        <endpoint contract="IMetadataExchange" binding="mexHttpBinding" address="mex" />
      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior name="metadataBehavior">
          <serviceMetadata />
          <serviceDebug httpHelpPageEnabled="true" httpsHelpPageEnabled="false" includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="SchemaValidationBehavior">
          <SchemaValidation validateRequest="true" validateReply="false">
            <schemas>
              <add location="schemas/DocumentRequest.xsd" />
              <add location="schemas/DocumentResponse.xsd" />
              <add location="schemas/emptySchema.xsd" />
            </schemas>
          </SchemaValidation>
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <bindings>
      <routerBinding>
        <binding name="SOAPRouterBindingConfiguration" transport="Https" messageEncoding="Text" hostNameComparisonMode="StrongWildcard" maxBufferSize="65536" maxBufferPoolSize="524288" maxReceivedMessageSize="2621440" transferMode="Buffered" />
      </routerBinding>
    </bindings>
    <extensions>
      <behaviorExtensions>
        <add name="SchemaValidation" type="SAT.DyP.Routing.Services.MessageInspection.SchemaValidationBehaviorExtensionElement, SAT.DyP.Routing.Services.MessageInspection, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
      </behaviorExtensions>
      <bindingExtensions>
        <add name="routerBinding" type="SAT.DyP.Routing.Services.RouterBindingCollectionElement, SAT.DyP.Routing.Services" />
      </bindingExtensions>
    </extensions>
  </system.serviceModel>
</configuration>